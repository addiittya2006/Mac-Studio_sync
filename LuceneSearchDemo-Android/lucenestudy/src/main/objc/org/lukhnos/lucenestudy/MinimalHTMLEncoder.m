//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/main/java/org/lukhnos/lucenestudy/MinimalHTMLEncoder.java
//

#include "J2ObjC_source.h"
#include "java/lang/StringBuilder.h"
#include "org/lukhnos/lucenestudy/MinimalHTMLEncoder.h"

@implementation OrgLukhnosLucenestudyMinimalHTMLEncoder

+ (NSString *)htmlEncodeWithNSString:(NSString *)plainText {
  return OrgLukhnosLucenestudyMinimalHTMLEncoder_htmlEncodeWithNSString_(plainText);
}

- (NSString *)encodeTextWithNSString:(NSString *)originalText {
  return OrgLukhnosLucenestudyMinimalHTMLEncoder_htmlEncodeWithNSString_(originalText);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgLukhnosLucenestudyMinimalHTMLEncoder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "htmlEncodeWithNSString:", "htmlEncode", "Ljava.lang.String;", 0x19, NULL, NULL },
    { "encodeTextWithNSString:", "encodeText", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgLukhnosLucenestudyMinimalHTMLEncoder = { 2, "MinimalHTMLEncoder", "org.lukhnos.lucenestudy", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgLukhnosLucenestudyMinimalHTMLEncoder;
}

@end

NSString *OrgLukhnosLucenestudyMinimalHTMLEncoder_htmlEncodeWithNSString_(NSString *plainText) {
  OrgLukhnosLucenestudyMinimalHTMLEncoder_initialize();
  if (plainText == nil || ((jint) [plainText length]) == 0) {
    return @"";
  }
  JavaLangStringBuilder *result = new_JavaLangStringBuilder_initWithInt_(((jint) [((NSString *) nil_chk(plainText)) length]));
  for (jint index = 0; index < ((jint) [plainText length]); index++) {
    jchar ch = [plainText charAtWithInt:index];
    switch (ch) {
      case '&':
      (void) [result appendWithNSString:@"&amp;"];
      break;
      case '<':
      (void) [result appendWithNSString:@"&lt;"];
      break;
      case '>':
      (void) [result appendWithNSString:@"&gt;"];
      break;
      default:
      (void) [result appendWithChar:ch];
    }
  }
  return [result description];
}

void OrgLukhnosLucenestudyMinimalHTMLEncoder_init(OrgLukhnosLucenestudyMinimalHTMLEncoder *self) {
  (void) NSObject_init(self);
}

OrgLukhnosLucenestudyMinimalHTMLEncoder *new_OrgLukhnosLucenestudyMinimalHTMLEncoder_init() {
  OrgLukhnosLucenestudyMinimalHTMLEncoder *self = [OrgLukhnosLucenestudyMinimalHTMLEncoder alloc];
  OrgLukhnosLucenestudyMinimalHTMLEncoder_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgLukhnosLucenestudyMinimalHTMLEncoder)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/main/java/org/lukhnos/lucenestudy/Study.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/File.h"
#include "java/io/FileInputStream.h"
#include "java/io/InputStream.h"
#include "java/io/PrintStream.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/lang/System.h"
#include "java/lang/Throwable.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/json/JSONArray.h"
#include "org/json/JSONObject.h"
#include "org/lukhnos/lucenestudy/Document.h"
#include "org/lukhnos/lucenestudy/Indexer.h"
#include "org/lukhnos/lucenestudy/SearchResult.h"
#include "org/lukhnos/lucenestudy/Searcher.h"
#include "org/lukhnos/lucenestudy/Study.h"
#include "org/lukhnos/lucenestudy/Suggester.h"

@implementation OrgLukhnosLucenestudyStudy

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  OrgLukhnosLucenestudyStudy_mainWithNSStringArray_(args);
}

+ (void)showHelpAndExit {
  OrgLukhnosLucenestudyStudy_showHelpAndExit();
}

+ (void)indexWithNSString:(NSString *)sourcePath
             withNSString:(NSString *)indexPath {
  OrgLukhnosLucenestudyStudy_indexWithNSString_withNSString_(sourcePath, indexPath);
}

+ (jint)importDataWithJavaIoInputStream:(JavaIoInputStream *)stream
                           withNSString:(NSString *)indexPath
                            withBoolean:(jboolean)withSuggestion {
  return OrgLukhnosLucenestudyStudy_importDataWithJavaIoInputStream_withNSString_withBoolean_(stream, indexPath, withSuggestion);
}

+ (void)searchWithNSString:(NSString *)indexPath
              withNSString:(NSString *)query {
  OrgLukhnosLucenestudyStudy_searchWithNSString_withNSString_(indexPath, query);
}

+ (void)suggestWithNSString:(NSString *)indexPath
               withNSString:(NSString *)query {
  OrgLukhnosLucenestudyStudy_suggestWithNSString_withNSString_(indexPath, query);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgLukhnosLucenestudyStudy_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "mainWithNSStringArray:", "main", "V", 0x9, "Ljava.lang.Exception;", NULL },
    { "showHelpAndExit", NULL, "V", 0x8, NULL, NULL },
    { "indexWithNSString:withNSString:", "index", "V", 0x8, NULL, NULL },
    { "importDataWithJavaIoInputStream:withNSString:withBoolean:", "importData", "I", 0x9, "Ljava.lang.Exception;", NULL },
    { "searchWithNSString:withNSString:", "search", "V", 0x8, "Ljava.lang.Exception;", NULL },
    { "suggestWithNSString:withNSString:", "suggest", "V", 0x8, "Ljava.lang.Exception;", NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgLukhnosLucenestudyStudy = { 2, "Study", "org.lukhnos.lucenestudy", NULL, 0x1, 7, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgLukhnosLucenestudyStudy;
}

@end

void OrgLukhnosLucenestudyStudy_mainWithNSStringArray_(IOSObjectArray *args) {
  OrgLukhnosLucenestudyStudy_initialize();
  if (((IOSObjectArray *) nil_chk(args))->size_ < 3) {
    OrgLukhnosLucenestudyStudy_showHelpAndExit();
    return;
  }
  if ([((NSString *) nil_chk(IOSObjectArray_Get(args, 0))) equalsIgnoreCase:@"index"]) {
    OrgLukhnosLucenestudyStudy_indexWithNSString_withNSString_(IOSObjectArray_Get(args, 1), IOSObjectArray_Get(args, 2));
  }
  else if ([((NSString *) nil_chk(IOSObjectArray_Get(args, 0))) equalsIgnoreCase:@"search"]) {
    OrgLukhnosLucenestudyStudy_searchWithNSString_withNSString_(IOSObjectArray_Get(args, 1), IOSObjectArray_Get(args, 2));
  }
  else if ([((NSString *) nil_chk(IOSObjectArray_Get(args, 0))) equalsIgnoreCase:@"suggest"]) {
    OrgLukhnosLucenestudyStudy_suggestWithNSString_withNSString_(IOSObjectArray_Get(args, 1), IOSObjectArray_Get(args, 2));
  }
}

void OrgLukhnosLucenestudyStudy_showHelpAndExit() {
  OrgLukhnosLucenestudyStudy_initialize();
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err_))) printlnWithNSString:@"Usage: Study [index|search|suggest] arguments..."];
  [JreLoadStatic(JavaLangSystem, err_) printlnWithNSString:@"    index <source JSON> <index path>"];
  [JreLoadStatic(JavaLangSystem, err_) printlnWithNSString:@"    search <index path> <query>"];
  [JreLoadStatic(JavaLangSystem, err_) printlnWithNSString:@"    suggest <index path> <keyword(s)>"];
  JavaLangSystem_exitWithInt_(1);
}

void OrgLukhnosLucenestudyStudy_indexWithNSString_withNSString_(NSString *sourcePath, NSString *indexPath) {
  OrgLukhnosLucenestudyStudy_initialize();
  JavaIoFile *dataFile = new_JavaIoFile_initWithNSString_(sourcePath);
  if (![dataFile exists]) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err_))) printlnWithNSString:JreStrcat("$$", @"JSON source not found: ", sourcePath)];
    JavaLangSystem_exitWithInt_(1);
  }
  if ([dataFile length] > JavaLangInteger_MAX_VALUE) {
    JavaLangSystem_exitWithInt_(1);
  }
  @try {
    JavaIoFileInputStream *stream = new_JavaIoFileInputStream_initWithNSString_(sourcePath);
    JavaLangThrowable *__primaryException1 = nil;
    @try {
      OrgLukhnosLucenestudyStudy_importDataWithJavaIoInputStream_withNSString_withBoolean_(stream, indexPath, true);
    }
    @catch (JavaLangThrowable *e) {
      __primaryException1 = e;
      @throw e;
    }
    @finally {
      if (stream != nil) {
        if (__primaryException1 != nil) {
          @try {
            [stream close];
          } @catch (JavaLangThrowable *e) {
            [__primaryException1 addSuppressedWithJavaLangThrowable:e];
          }
        } else {
          [stream close];
        }
      }
    }
  }
  @catch (JavaLangException *e) {
    [((JavaLangException *) nil_chk(e)) printStackTrace];
    JavaLangSystem_exitWithInt_(1);
  }
}

jint OrgLukhnosLucenestudyStudy_importDataWithJavaIoInputStream_withNSString_withBoolean_(JavaIoInputStream *stream, NSString *indexPath, jboolean withSuggestion) {
  OrgLukhnosLucenestudyStudy_initialize();
  JavaIoByteArrayOutputStream *baos = new_JavaIoByteArrayOutputStream_init();
  jint bufSize = 4096;
  IOSByteArray *buf = [IOSByteArray newArrayWithLength:bufSize];
  jint read;
  while ((read = [((JavaIoInputStream *) nil_chk(stream)) readWithByteArray:buf]) > 0) {
    [baos writeWithByteArray:buf withInt:0 withInt:read];
  }
  NSString *dataStr = [NSString stringWithBytes:[baos toByteArray] charsetName:@"UTF-8"];
  id<JavaUtilList> docs = new_JavaUtilArrayList_init();
  OrgJsonJSONArray *jsonArray = new_OrgJsonJSONArray_initWithNSString_(dataStr);
  for (jint i = 0, len = [jsonArray length]; i < len; i++) {
    OrgJsonJSONObject *entry_ = [jsonArray getJSONObjectWithInt:i];
    NSString *title = [((OrgJsonJSONObject *) nil_chk(entry_)) getStringWithNSString:@"title"];
    jint year = [entry_ getIntWithNSString:@"year"];
    jint rating = [entry_ getIntWithNSString:@"rating"];
    jboolean positive = [entry_ getBooleanWithNSString:@"positive"];
    NSString *review = [entry_ getStringWithNSString:@"review"];
    NSString *source = [entry_ getStringWithNSString:@"source"];
    OrgLukhnosLucenestudyDocument *doc = new_OrgLukhnosLucenestudyDocument_initWithNSString_withInt_withInt_withBoolean_withNSString_withNSString_(title, year, rating, positive, review, source);
    [docs addWithId:doc];
  }
  OrgLukhnosLucenestudyIndexer *indexer = new_OrgLukhnosLucenestudyIndexer_initWithNSString_withBoolean_(indexPath, false);
  [indexer addDocumentsWithJavaUtilList:docs];
  [indexer close];
  if (withSuggestion) {
    OrgLukhnosLucenestudySuggester_rebuildWithNSString_(indexPath);
  }
  return [docs size];
}

void OrgLukhnosLucenestudyStudy_searchWithNSString_withNSString_(NSString *indexPath, NSString *query) {
  OrgLukhnosLucenestudyStudy_initialize();
  OrgLukhnosLucenestudySearcher *searcher = new_OrgLukhnosLucenestudySearcher_initWithNSString_(indexPath);
  OrgLukhnosLucenestudySearchResult *result = [searcher searchWithNSString:query withOrgLukhnosLucenestudySearcher_SortByEnum:nil withInt:10];
  for (OrgLukhnosLucenestudyDocument * __strong doc in nil_chk(((OrgLukhnosLucenestudySearchResult *) nil_chk(result))->documents_)) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out_))) printlnWithNSString:JreStrcat("$$", @"title   : ", [result getHighlightedTitleWithOrgLukhnosLucenestudyDocument:doc])];
    [JreLoadStatic(JavaLangSystem, out_) printlnWithNSString:JreStrcat("$I", @"year    : ", ((OrgLukhnosLucenestudyDocument *) nil_chk(doc))->year_)];
    [JreLoadStatic(JavaLangSystem, out_) printlnWithNSString:JreStrcat("$I", @"rating  : ", doc->rating_)];
    [JreLoadStatic(JavaLangSystem, out_) printlnWithNSString:JreStrcat("$Z", @"positive: ", doc->positive_)];
    [JreLoadStatic(JavaLangSystem, out_) printlnWithNSString:JreStrcat("$$", @"review  : ", [result getHighlightedReviewWithOrgLukhnosLucenestudyDocument:doc])];
    [JreLoadStatic(JavaLangSystem, out_) println];
  }
  [searcher close];
}

void OrgLukhnosLucenestudyStudy_suggestWithNSString_withNSString_(NSString *indexPath, NSString *query) {
  OrgLukhnosLucenestudyStudy_initialize();
  OrgLukhnosLucenestudySuggester *suggester = new_OrgLukhnosLucenestudySuggester_initWithNSString_(indexPath);
  id<JavaUtilList> suggestions = [suggester suggestWithNSString:query];
  for (NSString * __strong text in nil_chk(suggestions)) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out_))) printlnWithNSString:JreStrcat("$$", @"Suggestion: ", text)];
  }
  [suggester close];
}

void OrgLukhnosLucenestudyStudy_init(OrgLukhnosLucenestudyStudy *self) {
  (void) NSObject_init(self);
}

OrgLukhnosLucenestudyStudy *new_OrgLukhnosLucenestudyStudy_init() {
  OrgLukhnosLucenestudyStudy *self = [OrgLukhnosLucenestudyStudy alloc];
  OrgLukhnosLucenestudyStudy_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgLukhnosLucenestudyStudy)
